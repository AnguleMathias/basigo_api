{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Basigo",
    "description": "Basigo users service API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "https://basigo.herokuapp.com",
  "basePath": "/",
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/signup": {
      "post": {
        "summary": "Signup a new user",
        "tags": ["Authentication"],
        "description": "Signup a new user",
        "operationId": "signup",
        "produces": ["application/json"],
        "parameters": [
          {
            "username": "body",
            "email": "body",
            "password": "body",
            "in": "body",
            "description": "User object that needs to be added to the app",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully signed up",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Login a user",
        "tags": ["Authentication"],
        "description": "Login a user",
        "operationId": "login",
        "produces": ["application/json"],
        "parameters": [
          {
            "email": "body",
            "password": "body",
            "in": "body",
            "description": "User object that needs to be logged in to the app",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully logged in",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/leads": {
      "get": {
        "tags": ["Leads"],
        "summary": "Get all leads",
        "security": {
          "Authorization": {}
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Leads"
            }
          }
        }
      }
    },
    "/createLead": {
      "post": {
        "tags": ["Leads"],
        "summary": "Create a lead",
        "description": "Create a lead",
        "parameters": [
          {
            "firstName": "John",
            "middleName": "Doe",
            "lastName": "Phillips",
            "location": "Nairobi",
            "phone": "0123456789",
            "schema": {
              "$ref": "#/definitions/Leads"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "New lead is created",
            "schema": {
              "$ref": "#/definitions/Lead"
            }
          }
        }
      }
    },
    "/leads/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of lead that we want to find",
          "type": "integer"
        }
      ],
      "put": {
        "summary": "Update a lead with given Id",
        "tags": ["Leads"],
        "parameters": [
          {
            "name": "lead",
            "in": "body",
            "description": "Lead with new values of properties",
            "schema": {
              "$ref": "#/definitions/updateLead"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lead is updated",
            "schema": {
              "$ref": "#/definitions/Lead"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a lead with given Id",
        "tags": ["Leads"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of lead that we want to delete",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Lead is deleted",
            "schema": {
              "$ref": "#/definitions/Lead"
            }
          }
        }
      }
    },
    "/customer": {
      "get": {
        "tags": ["Customers"],
        "summary": "Get all customers",
        "security": {
          "Authorization": {}
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Customers"
            }
          }
        }
      }
    },
    "/lead/{id}/customer": {
      "post": {
        "tags": ["Customers"],
        "summary": "Create a customer",
        "description": "Create a customer",
        "parameters": [
          {
            "firstName": "John",
            "middleName": "Doe",
            "lastName": "Phillips",
            "location": "Nairobi",
            "phone": "0123456789",
            "photo": "https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png",
            "annualEarning": "100000",
            "productsOfInterest": ["Product 1", "Product 2"],
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "New customer is created",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        }
      }
    },
    "/customer/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of customer that we want to find",
          "type": "integer"
        }
      ],
      "put": {
        "summary": "Update a customer with given Id",
        "tags": ["Customers"],
        "parameters": [
          {
            "name": "customer",
            "in": "body",
            "description": "Customer with new values of properties",
            "schema": {
              "$ref": "#/definitions/updateCustomer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer is updated",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a customer with given Id",
        "tags": ["Customers"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of lead that we want to delete",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Customer is deleted",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "uniqueItemas": true
        },
        "password": {
          "type": "string"
        },
        "role": {
          "type": "string"
        }
      }
    },
    "Lead": {
      "properties": {
        "id": {
          "type": "integer",
          "uniqueItems": true
        },
        "firstName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "phone": {
          "type": "string",
          "uniqueItems": true
        }
      }
    },
    "Leads": {
      "type": "array",
      "$ref": "#/definitions/Lead"
    },
    "updateLead": {
      "required": ["firstName", "middleName", "lastName", "location", "phone"],
      "properties": {
        "firstName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "phone": {
          "type": "string",
          "uniqueItems": true
        }
      }
    },
    "Customer": {
      "properties": {
        "id": {
          "type": "integer",
          "uniqueItems": true
        },
        "firstName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "phone": {
          "type": "string",
          "uniqueItems": true
        },
        "photo": {
          "type": "string"
        },
        "annualEarning": {
          "type": "string"
        },
        "productsOfInterest": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Customers": {
      "type": "array",
      "$ref": "#/definitions/Customer"
    },
    "updateCustomer": {
      "required": [
        "firstName",
        "middleName",
        "lastName",
        "location",
        "phone",
        "photo",
        "annualEarning",
        "productsOfInterest"
      ],
      "properties": {
        "firstName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "phone": {
          "type": "string",
          "uniqueItems": true
        },
        "photo": {
          "type": "string"
        },
        "annualEarning": {
          "type": "string"
        },
        "productsOfInterest": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}
